#ifndef __PADDLE_H
#define __PADDLE_H

#include "Bonus.h"
#include "window.h"
#include "Rectangle.h"
extern "C" {
#include <curses.h>
}

class Paddle {
  private:
    rectangle m_paddlePattern;
    Color m_paddleColor;
    int m_paddleResistance;
  public:
    //Builder/Destructor
    ////////////////////////////////////////////////////////////
    /// Input : rectangle,color,int
    ///
    /// Result : build a paddle with parameter
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    Paddle(rectangle,Color,int);
  
    ////////////////////////////////////////////////////////////
    /// Input : none
    ///
    /// Result : default destructor
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    ~Paddle();

  //Accessors
  ////////////////////////////////////////////////////////////
  /// Input : none
  ///
  /// Result : return m_paddlePattern
  ///
  /// info :
  ////////////////////////////////////////////////////////////
  rectangle getPaddlePattern() const;
  ////////////////////////////////////////////////////////////
  /// Input : rectangle
  ///
  /// Result : change m_paddlePattern
  ///
  /// info :
  ////////////////////////////////////////////////////////////
  void setPaddlePattern(rectangle);

  ////////////////////////////////////////////////////////////
  /// Input : none
  ///
  /// Result : return m_paddleColor
  ///
  /// info :
  ////////////////////////////////////////////////////////////
  Color getPaddleColor() const;
  ////////////////////////////////////////////////////////////
  /// Input : color
  ///
  /// Result : change m_paddleColor
  ///
  /// info :
  ////////////////////////////////////////////////////////////
  void setPaddleColor(Color);

  ////////////////////////////////////////////////////////////
  /// Input : none
  ///
  /// Result : return m_paddleResistance
  ///
  /// info :
  ////////////////////////////////////////////////////////////
  int getPaddleResistance() const;
  ////////////////////////////////////////////////////////////
  /// Input : int
  ///
  /// Result : change m_paddleResistance
  ///
  /// info :
  ////////////////////////////////////////////////////////////
  void setPaddleResistance(int);
  ////////////////////////////////////////////////////////////
  /// Input : Bonus
  ///
  /// Result : true if Paddle have bonus
  ///
  /// info :
  ////////////////////////////////////////////////////////////
 bool setPaddleBonus(Bonus);
 //void setPaddleBonus(Bonus);

  //Method
  ////////////////////////////////////////////////////////////
  /// Input : none
  ///
  /// Result : move paddle when key is pressed
  ///
  /// info :
  ////////////////////////////////////////////////////////////
 void move();
 void move(rectangle);
  ////////////////////////////////////////////////////////////

  /// Input : Bonus&
  ///
  /// Result : check if bonus need to be set
  ///
  /// info :
  ////////////////////////////////////////////////////////////
  void bonus(Bonus&);

};

#endif
