#ifndef __BRICK_H
#define __BRICK_H


#include "window.h"
#include "Rectangle.h"
extern "C" {
#include <curses.h>
}


class Brick{
  private:
    rectangle m_brickPattern;
    Color m_brickColor;
    bool m_bonus;
    int m_brickResistance;
  public:
    //Builder/Destructor
    ////////////////////////////////////////////////////////////
    /// Input : all attribut of Brick class
    ///
    /// Result : build a Brick with parameter
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    Brick(rectangle,Color,bool,int);

    ~Brick();

    //Accessors
    ////////////////////////////////////////////////////////////
    /// Input : none
    ///
    /// Result : return m_brickPattern
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    rectangle getBrickPattern() const;
    ////////////////////////////////////////////////////////////
    /// Input : rectangle
    ///
    /// Result : Change m_brickPattern
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    void setBrickPattern(rectangle);

    ////////////////////////////////////////////////////////////
    /// Input : none
    ///
    /// Result : return m_brickColor
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    Color getBrickColor() const;
    ////////////////////////////////////////////////////////////
    /// Input : Color
    ///
    /// Result : change m_brickColor
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    void setBrickColor(Color);

    ////////////////////////////////////////////////////////////
    /// Input : none
    ///
    /// Result : return true if Brick have bonus false if not (m_bonus)
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    bool getBrickBonus() const;
    ////////////////////////////////////////////////////////////
    /// Input : boolean
    ///
    /// Result : change m_bonus
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    void setBrickBonus(bool);

    ////////////////////////////////////////////////////////////
    /// Input : none
    ///
    /// Result : return m_brickResistance
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    int getBrickResistance() const;
    ////////////////////////////////////////////////////////////
    /// Input : int
    ///
    /// Result : change m_brickResistance
    ///
    /// info :
    ////////////////////////////////////////////////////////////
    void setBrickResistance(int);

    //Method
    ////////////////////////////////////////////////////////////
    /// Input : None
    ///
    /// Result : test if m_brickResistance is 0, if is 0 delete the brick, else  m_brickResistance reduced by 1
    ///
    /// info : 
    ////////////////////////////////////////////////////////////
    void hit();




};



#endif
